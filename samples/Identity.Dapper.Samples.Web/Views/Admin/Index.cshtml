@model IEnumerable<Identity.Dapper.Samples.Web.Models.Employee>

@{
    ViewData["Title"] = "Employee List";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
<style type="text/css">
    /*.k-tooltip.k-invalid-msg {
            z-index: 10000;
        }*/
</style>
<h2>Employee List</h2>

<div id="employeelist">
    <div id="grid"></div>
    @section scripts
    {
        <script>
            var crudServiceBaseUrl = "";
            var Department = [];
            var _roleDataSource;
            $(document).ready(function () {
                //        var brands = [
                //{ brandId: 1, name: "Ford" },
                //{ brandId: 2, name: "BMW" }
                //        ];



                $.ajax({
                    url: crudServiceBaseUrl + "/adm/emp/department",
                    dataType: "json",
                    success: function (response) {

                        for (var i = 0; i < response.length; i++) {
                            Department.push({ id: response[i].text, title: response[i].text });

                        }


                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log(textStatus, errorThrown);
                    }


                })

                var empid;
                dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: crudServiceBaseUrl + "/adm/emp/list",
                            dataType: "json",

                        },
                        update: {
                            url: crudServiceBaseUrl + "/adm/emp/Update",
                            dataType: "json",
                            type: 'POST'
                        },
                        destroy: {
                            url: crudServiceBaseUrl + "/adm/emp/Delete",
                            dataType: "json",
                            type: 'POST'
                        },
                        create: {
                            url: crudServiceBaseUrl + "/adm/emp/Create",
                            dataType: "json",
                            type: 'POST'
                        },
                        parameterMap: function (options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    batch: true,
                    pageSize: 20,
                    schema: {
                        model: {
                            id: "employeeID",
                            fields: {
                                employeeID: { editable: false, nullable: true },
                                username: {
                                    validation: {
                                        email: true,
                                        required: true,
                                        DisplayNameValidation: function (input) {
                                            var exists = CheckName(input);
                                            if (exists && input.is("[name='username']") && input.val() != "") {
                                                input.attr("data-DisplayNameValidation-msg", "User Name already exists.");
                                                return false;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                empName: { validation: { required: true } },
                                deptName: { validation: { required: true } },
                                mobileNo: { validation: { required: true } },
                                joiningDate: { validation: { required: true }, type: "date" },
                                relevingDate: { type: "date", nullable: true, validation: { required: false } }
                            }
                        }
                    }
                });

                $("#grid").kendoGrid({
                    dataSource: dataSource,
                    pageable: true,
                    height: 550,
                    toolbar: ["create"],
                    columns: [
                        { field: "username", title: "User Name" },
                         { field: "empName", title: "Employee Name" },
                          { field: "deptName", title: "Department", width: "160px", editor: DepartmentDropDownEditor },
                          { field: "mobileNo", title: "Mobile No", width: "130px" },
                          { field: "joiningDate", title: "Joining Date", editor: JoiningDateEditor, type: "date", template: "#= kendo.toString(kendo.parseDate(joiningDate, 'yyyy-MM-dd'), 'dd-MMM-yyyy') #" },
                          { field: "relevingDate", title: "Relieving Date", editor: RelevingDateEditor, type: "date", template: "# if(relevingDate === null){# - #}else{# #=kendo.toString(kendo.parseDate(relevingDate, 'yyyy-MM-dd'), 'dd-MMM-yyyy')#  #}#" },
                        { command: ["edit", "destroy"], title: "&nbsp;", width: "250px" }],
                    editable: "inline"
                });


            });

            function CheckName(input) {

                var currentPart = null;

                ligrid = $("#grid").data("kendoGrid");
                var lidata = ligrid.dataSource.data();

                var NewUserName = "";
                var Respo = false;
                $.each(lidata, function (i, row) {

                    if (i == 0) {
                        NewUserName = input.val();
                    }
                    else {
                        if (NewUserName.trim().toLowerCase() == row.username.trim().toLowerCase()) {
                            Respo = true;
                        }

                    }
                });
                    return Respo;
                
            }

            function DepartmentDropDownEditor(container, options) {

                $('<input  data-bind="value:' + options.field + '" name="' + options.field + '" />')
                    .attr("id", "ddl_roleTitle")
                    .appendTo(container)
                    .kendoDropDownList({
                        dataSource: new kendo.data.DataSource({
                            data: Department
                        }),
                        dataTextField: "title",
                        dataValueField: "title",
                        template: "<span data-id='${data.id}'>${data.title}</span>"
                    });
                $("<span class='k-invalid-msg' data-for='" + options.field + "'></span>").appendTo(container);
            }

            function JoiningDateEditor(container, options) {

                //$('<input required name="' + options.field + '"/>').kendoDatePicker();

                $('<input required  name="' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDatePicker({
                        format: "dd,MMM yyyy"
                    });

                $("<span class='k-invalid-msg' data-for='" + options.field + "'></span>").appendTo(container);
            }

            function RelevingDateEditor(container, options) {

                $('<input name="' + options.field + '"/>')
                     .appendTo(container)
                     .kendoDatePicker({
                         format: "dd,MMM yyyy"
                     });

                //$("<span class='k-invalid-msg' data-for='" + options.field + "'></span>").appendTo(container);
            }

        </script>


    }
</div>